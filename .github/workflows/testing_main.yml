name: Testing Main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Copy Data
      run: cp -r ${{github.workspace}}/examples/data ${{github.workspace}}/build/examples/

    - name: Run Examples
      working-directory: ${{github.workspace}}/build/examples
      run: |
        ./custom_order/custom_order ./data/com-dblp.uedgelist
        ./degree_order/degree_order ./data/com-dblp.uedgelist
        ./rcm_order/rcm_order ./data/com-dblp.uedgelist
        ./format_conversion/example_conversion
        ./sparse_format/csr_coo ./data/ash958.mtx
        ./sparse_reader/sparse_reader ./data/ash958.mtx
      

    #- name: Test
     # working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      #run: ctest -C ${{env.BUILD_TYPE}}
      
